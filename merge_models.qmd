---
title: "merge_models"
format: html
editor_options: 
  chunk_output_type: console
---

## Overview

- [ ] update taxonomic identifier across `species` table
  - [ ] for birds, use `itis` as the source of truth
  - [ ] for not birds, use `worms` as the source of truth
- [ ] create a new table `taxon` with a single authoritative record for each taxon
- [ ] query for `species` having multiple rows in table `model`
- [ ] query for `species` having multiple rows in table `model`

```{r setup}
librarian::shelf(
  DBI, dplyr, DT, duckdb, fs, glue, here, knitr, janitor, leaflet, 
  leaflet.extras2, logger, mapview, purrr, readr, readxl, sf, skimr, stringr, 
  terra, tibble, tidyr,
  quiet = T)
options(readr.show_col_types = F)

is_server     <- Sys.info()[["sysname"]] == "Linux"
dir_private   <- ifelse(is_server, "/share/private", "~/My Drive/private")
dir_data      <- ifelse(is_server, "/share/data"   , "~/My Drive/projects/msens/data")
spp_db        <- glue("{dir_data}/derived/spp.duckdb")
sdm_db        <- glue("{dir_data}/derived/sdm.duckdb")
cell_tif      <- glue("{dir_data}/derived/r_bio-oracle_planarea.tif")
dir_bl        <- glue("{dir_data}/raw/birdlife.org")
botw_gpkg     <- glue("{dir_bl}/BOTW_GPKG_2024_2/BOTW_2024_2.gpkg")
botw_csv      <- glue("{dir_bl}/spp_botw.csv")
botw_vern_csv <- glue("{dir_bl}/spp_botw_vernacular.csv")

con_spp <- dbConnect(duckdb(dbdir = spp_db, read_only = T))
# dbListTables(con_spp)
# [1] "gbif"             "gbif_vernacular"  "itis"             "itis_vernacular" 
# [5] "iucn_redlist"     "iucn_vernacular"  "worms"            "worms_vernacular"
con_sdm <- dbConnect(duckdb(dbdir = sdm_db, read_only = F))
# dbListTables(con_sdm)
# [1] "cell_metric" "dataset"     "metric"      "model"       "model_cell" 
# [6] "species"     "zone"        "zone_cell"   "zone_metric"
```

```{r dataset_model_summary}
tbl(con_sdm, "model") |> 
  group_by(ds_key) |> 
  summarize(n = n()) |> 
  arrange(ds_key)
#   ds_key      n
#   <chr>   <dbl>
# 1 am_0.05 17550
# 2 bl        573
# 3 ch_fws     29
# 4 ch_nmfs    34
# 5 rng_fws   106

stopifnot(
  tbl(con_sdm, "species") |> 
    pull(sp_key) |> 
    duplicated() |> 
    sum() == 0)
```

```{r worms_id_update}
d <- tbl(con_sdm, "species") |> 
  filter(!is.na(worms_id)) |> 
  collect() # 16,916
d2 <- d |> 
  left_join(
    tbl(con_spp, "worms") |>
      filter(
        taxonID %in% d$worms_id,
        taxonID != acceptedNameUsageID) |> 
      select(
        taxonID, acceptedNameUsageID) |> 
      collect(),
    by = join_by(worms_id == taxonID)) |> 
  mutate(
    worms_id_new = coalesce(acceptedNameUsageID, worms_id)) |> 
  select(sp_key, worms_id, worms_id_new) |> 
  filter(worms_id_new != worms_id)
# d2
#   # A tibble: 17 × 3
#    sp_key       worms_id worms_id_new
#    <chr>           <int>        <int>
#  1 W-Msc-342092   342092      1813559
#  2 W-Msc-139039   139039       405962
#  3 SLB-4744      1346052      1819943
#  4 SLB-80061      532730       832052
#  5 W-Msc-504386   420719       504386
#  6 W-Por-166666   166666      1814728
#  7 W-Pol-157378   157378      1812830
#  8 Fis-29588      271695      1815696
#  9 Fis-29585      157869      1815701
# 10 Fis-29594      238345      1815710
# 11 SLB-93116      531880      1819191
# 12 W-Pol-330500   330500       130321
# 13 ITS-660021     515341       589374
# 14 W-Msc-532730   532730       832052
# 15 W-Msc-531880   531880      1819191
# 16 W-Msc-216543   216543       850770
# 17 W-Msc-507406   507406      1818767

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id = d2.worms_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 17
duckdb_unregister(con_sdm, "d2")
```

```{r worms_id_na}
d <- tbl(con_sdm, "species") |> 
  filter(is.na(worms_id)) |> 
  collect() # 1,376

# d$scientific_name_dataset |> str_subset("\\(") |> 
# "Phoca (=Pusa) hispida hispida"   "Branta (=Nesochen) sandvicensis"
# str_remove_all("\\(=[^)]+\\)") |> str_squish()
# "Phoca hispida hispida"           "Branta sandvicensis"
d <- d |> 
  mutate(
    scientific_name_clean = scientific_name_dataset |> 
      str_remove_all("\\(=[^)]+\\)") |> 
      str_squish())

d2 <- d |> # names()
  left_join(
    tbl(con_spp, "worms") |>
      filter(scientificName %in% d$scientific_name_clean) |> 
      select(
        scientificName, 
        worms_id_new          = acceptedNameUsageID,
        worms_scientific_name = acceptedNameUsage,
        taxonomicStatus) |> 
        # TODO: append worms_is_marine, worms_is_extinct ----
        # worms_is_marine  = isMarine, 
        # worms_is_extinct = isExtinct) |>
    collect(),
    by = join_by(scientific_name_clean == scientificName)) |> 
  mutate(
    taxonomic_status = factor(
      taxonomicStatus,
      levels = c(
        "accepted", "unassessed", "interim unpublished", "temporary name",
        "uncertain", "taxon inquirendum", "nomen dubium",
        "alternative representation", "misapplication",
        "misspelling - incorrect original spelling",
        "misspelling - incorrect subsequent spelling",
        "unjustified emendation",
        "incorrect grammatical agreement of specific epithet",
        "junior subjective synonym", "junior objective synonym",
        "junior homonym", "unreplaced junior homonym",
        "superseded combination", "superseded rank",
        "nomen nudum", "nomen oblitum",
        "unavailable name", "unaccepted"), 
      ordered = T )) |>
  slice_min(
    by        = scientific_name_clean,
    order_by  = taxonomic_status, 
    with_ties = F) |> 
  filter(!is.na(worms_id_new)) |>
  select(sp_key, worms_id, worms_id_new) # 701

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id = d2.worms_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 1,359
duckdb_unregister(con_sdm, "d2")
```

```{r itis_id_update}
d <- tbl(con_sdm, "species") |> 
  filter(!is.na(itis_id)) |> 
  collect() # 134
d2 <- d |> 
  left_join(
    tbl(con_spp, "itis") |>
      filter(
        taxonID %in% d$itis_id,
        taxonID != acceptedNameUsageID) |> 
      select(
        taxonID, acceptedNameUsageID) |> 
      collect(),
    by = join_by(itis_id == taxonID)) |> 
  mutate(
    itis_id_new = coalesce(acceptedNameUsageID, itis_id)) |> 
  select(sp_key, itis_id, itis_id_new) |> 
  filter(itis_id_new != itis_id)
# 0 rows
```

```{r itis_id_na}
d <- tbl(con_sdm, "species") |> 
  filter(is.na(itis_id)) |> 
  collect() # 18,158

# d$scientific_name_dataset |> str_subset("\\(") |> 
# "Phoca (=Pusa) hispida hispida"
# str_remove_all("\\(=[^)]+\\)") |> str_squish()
# "Phoca hispida hispida"
d <- d |> 
  mutate(
    scientific_name_clean = scientific_name_dataset |> 
      str_remove_all("\\(=[^)]+\\)") |> 
      str_squish())

d2 <- d |> # names()
  left_join(
    tbl(con_spp, "itis") |>
      filter(scientificName %in% d$scientific_name_clean) |> 
      select(
        scientificName, 
        itis_id_new     = acceptedNameUsageID,
        taxonomicStatus) |> 
    collect(),
    by = join_by(scientific_name_clean == scientificName),
    relationship = "many-to-many") |> 
  mutate(
    taxonomic_status = factor(
      taxonomicStatus,
      levels = c("valid", "accepted", "not accepted", "invalid"), 
      ordered = T )) |>
  slice_min(
    by        = scientific_name_clean,
    order_by  = taxonomic_status, 
    with_ties = F) |> 
  filter(!is.na(itis_id_new)) |>
  select(sp_key, itis_id, itis_id_new) # 393

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET itis_id = d2.itis_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 393
duckdb_unregister(con_sdm, "d2")
```

```{r gbif_id_update}
d <- tbl(con_sdm, "species") |> 
  filter(!is.na(gbif_id)) |> 
  collect() # 325
d2 <- d |> 
  left_join(
    tbl(con_spp, "gbif") |>
      filter(
        taxonID %in% d$gbif_id,
        !is.na(acceptedNameUsageID)) |> 
      select(
        taxonID, acceptedNameUsageID) |> 
      collect(),
    by = join_by(gbif_id == taxonID)) |> 
  mutate(
    gbif_id_new = coalesce(acceptedNameUsageID, gbif_id)) |> 
  select(sp_key, gbif_id, gbif_id_new) |> 
  filter(gbif_id_new != gbif_id)
# 0 rows
```

```{r gbif_id_na}
d <- tbl(con_sdm, "species") |> 
  filter(is.na(gbif_id)) |> 
  collect() |> 
  mutate(
    scientific_name_clean = scientific_name_dataset |> 
      str_remove_all("\\(=[^)]+\\)") |> 
      str_squish()) # 17,967

d2 <- d |>
  left_join(
    tbl(con_spp, "gbif") |>
      filter(scientificName %in% d$scientific_name_clean) |> 
      select(
        scientificName, 
        acceptedNameUsageID,
        taxonID,
        taxonomicStatus) |> 
    collect(),
    by = join_by(scientific_name_clean == scientificName),
    relationship = "many-to-many") |> 
  mutate(
    acceptedNameUsageID = as.integer(acceptedNameUsageID),
    gbif_id_new = coalesce(acceptedNameUsageID, taxonID),
    taxonomic_status = factor(
      taxonomicStatus,
      levels = c("valid", "accepted", "synonym", "not accepted", "invalid"), 
      ordered = T )) |>
  slice_min(
    by        = scientific_name_clean,
    order_by  = taxonomic_status, 
    with_ties = F) |> 
  filter(!is.na(gbif_id_new)) |>
  select(sp_key, gbif_id, gbif_id_new) # 27
# A tibble: 27 × 3
#    sp_key     gbif_id gbif_id_new
#    <chr>        <int>       <int>
#  1 Fis-153539      NA     7059179
#  2 Fis-144084      NA     7193206
#  3 Fis-23839       NA     7193804
#  4 SLB-141293      NA     9802728
#  5 ITS-89613       NA     2115695
#  6 SLB-135613      NA     2668329
#  7 Fis-23314       NA     7193246
#  8 SLB-67618       NA     1004077
#  9 Fis-130709      NA     7193250
# 10 Fis-23218       NA     7193248
# ℹ 17 more rows

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET gbif_id = d2.gbif_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 27
duckdb_unregister(con_sdm, "d2")
```

```{r auth_sum}
tbl(con_sdm, "species") |> 
  group_by(sp_cat, ds_key) |> 
  summarize(
    n = n(), 
    n_worms = sum(!is.na(worms_id), na.rm = T), 
    n_itis  = sum(!is.na(itis_id),  na.rm = T),
    n_gbif  = sum(!is.na(gbif_id),  na.rm = T),
    n_allna = sum(
      is.na(worms_id) & is.na(itis_id) & is.na(gbif_id),  na.rm = T),
    .groups = "drop") |> 
  mutate(
    pct_worms = n_worms / n * 100,
    pct_itis  = n_itis  / n * 100,
    pct_gbif  = n_gbif  / n * 100,
    pct_allna = n_allna / n * 100) |> 
  arrange(sp_cat, ds_key) |> 
  collect() |> 
  print(n = Inf)
  
#   sp_cat           n n_worms n_itis n_gbif pct_worms pct_itis pct_gbif
#   <chr>        <dbl>   <dbl>  <dbl>  <dbl>     <dbl>    <dbl>    <dbl>
# 1 fish          6700    6700    107     84     100      1.60      1.25
# 2 turtle          49      47     17      5      95.9   34.7      10.2 
# 3 invertebrate  8530    8379    231    187      98.2    2.71      2.19
# 4 other         1417    1146     35     50      80.9    2.47      3.53
# 5 coral          819     815      5     11      99.5    0.611     1.34
# 6 mammal         103     100     12      8      97.1   11.7       7.77
# 7 bird           674     430    120      7      63.8   17.8       1.04

#    sp_cat   ds_key     n n_worms n_itis n_gbif n_allna pct_worms pct_itis pct_gbif
#    <chr>    <chr>  <dbl>   <dbl>  <dbl>  <dbl>   <dbl>     <dbl>    <dbl>    <dbl>
#  1 bird     am_0.…     1       1      0      0       0     100      0        0    
#  2 bird     bl       573     401     21      1     162      70.0    3.66     0.175
#  3 bird     ch_fws    18       4     18      2       0      22.2  100       11.1  
#  4 bird     rng_f…    82      24     81      4       1      29.3   98.8      4.88 
#  5 coral    am_0.…   807     803      5     11       4      99.5    0.620    1.36 
#  6 coral    ch_nm…    12      12      0      0       0     100      0        0    
#  7 fish     am_0.…  6682    6682     95     84       0     100      1.42     1.26 
#  8 fish     ch_fws     3       3      3      0       0     100    100        0    
#  9 fish     ch_nm…     6       6      0      0       0     100      0        0    
# 10 fish     rng_f…     9       9      9      0       0     100    100        0    
# 11 inverte… am_0.…  8525    8374    227    187     140      98.2    2.66     2.19 
# 12 inverte… ch_nm…     1       1      0      0       0     100      0        0    
# 13 inverte… rng_f…     4       4      4      0       0     100    100        0    
# 14 mammal   am_0.…    85      84      4      8       0      98.8    4.71     9.41 
# 15 mammal   ch_fws     3       3      3      0       0     100    100        0    
# 16 mammal   ch_nm…    11       9      1      0       1      81.8    9.09     0    
# 17 mammal   rng_f…     4       4      4      0       0     100    100        0    
# 18 other    am_0.…  1417    1146     35     50     243      80.9    2.47     3.53 
# 19 turtle   am_0.…    33      31      5      5       2      93.9   15.2     15.2  
# 20 turtle   ch_fws     5       5      5      0       0     100    100        0    
# 21 turtle   ch_nm…     4       4      0      0       0     100      0        0    
# 22 turtle   rng_f…     7       7      7      0       0     100    100        0
```

```{r worms_is_marine}
d <- tbl(con_sdm, "species") |> 
  filter(!is.na(worms_id)) |> 
  collect() # 17,617
d_cols <- setdiff(names(d), c("worms_is_marine", "worms_is_extinct"))

d2 <- d |> # names()
  select(all_of(d_cols)) |>
  left_join(
    tbl(con_spp, "worms") |>
      filter(taxonID %in% d$worms_id) |> 
      select(
        taxonID,
        worms_is_marine  = isMarine,
        worms_is_extinct = isExtinct) |>
      collect(),
    by = join_by(worms_id == taxonID)) |> 
  filter(!is.na(worms_is_marine) | !is.na(worms_is_extinct)) |>
  distinct(worms_id, worms_is_marine, worms_is_extinct) # 17,276

dbExecute(con_sdm, "ALTER TABLE species ADD COLUMN IF NOT EXISTS worms_is_marine BOOLEAN")
dbExecute(con_sdm, "ALTER TABLE species ADD COLUMN IF NOT EXISTS worms_is_extinct BOOLEAN")

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_is_marine  = d2.worms_is_marine ,
        worms_is_extinct = d2.worms_is_extinct 
    FROM d2
    WHERE species.worms_id = d2.worms_id") # 17,544
duckdb_unregister(con_sdm, "d2")
```


```{r pct_worms}
tbl(con_sdm, "species") |> 
  summarize(
    n = n(), 
    n_worms_marine  = sum(worms_is_marine,  na.rm = T), 
    n_worms_extinct = sum(worms_is_extinct, na.rm = T)) |> 
  mutate(
    pct_worms_marine  = n_worms_marine  / n * 100,
    pct_worms_extinct = n_worms_extinct / n * 100)
#     n n_worms_marine n_worms_extinct pct_worms_marine pct_worms_extinct
# <dbl>          <dbl>           <dbl>            <dbl>             <dbl>
# 18292          17387              21             95.1             0.115

tbl(con_sdm, "species") |> 
  group_by(sp_cat) |> 
  summarize(
    n = n(), 
    n_worms_marine  = sum(worms_is_marine,  na.rm = T), 
    n_worms_extinct = sum(worms_is_extinct, na.rm = T)) |> 
  mutate(
    pct_worms_marine  = n_worms_marine  / n * 100,
    pct_worms_extinct = n_worms_extinct / n * 100)
#   sp_cat           n n_worms_marine n_worms_extinct pct_worms_marine pct_worms_extinct
#   <chr>        <dbl>          <dbl>           <dbl>            <dbl>             <dbl>
# 1 invertebrate  8530           8337              21             97.7             0.246
# 2 other         1417           1145               0             80.8             0    
# 3 coral          819            815               0             99.5             0    
# 4 fish          6700           6699               0            100.0             0    
# 5 turtle          49             46              NA             93.9            NA    
# 6 mammal         103            103               0            100               0    
# 7 bird           674            242              NA             35.9            NA    
```

```{r bird_sci}
tbl(con_sdm, "species") |> 
  filter(sp_cat == "bird", is.na(scientific_name_accepted)) |> 
  glimpse()
# $ sp_seq                   <int> 10651
# $ ds_key                   <chr> "am_0.05"
# $ taxa                     <chr> "ITS-Ave-174707"
# $ sp_key                   <chr> "ITS-Ave-174707"
# $ worms_id                 <int> 212596
# $ gbif_id                  <int> NA
# $ itis_id                  <int> NA
# $ scientific_name_dataset  <chr> "Sula sula"
# $ common_name_dataset      <chr> "red-footed booby"
# $ scientific_name_accepted <chr> NA
# $ common_name_accepted     <chr> NA
# $ iucn_id                  <int> NA
# $ redlist_code             <chr> "LC"
# $ redlist_year             <int> 2021
# $ sp_cat                   <chr> "bird"
# $ worms_is_marine          <lgl> TRUE
# $ worms_is_extinct         <lgl> NA
dbExecute(
  con_sdm, 
    "UPDATE species
    SET scientific_name_accepted = scientific_name_dataset,
        common_name_accepted     = 'Red-footed Booby'
    WHERE ds_key = 'am_0.05' AND scientific_name_dataset = 'Sula sula'") # 17,544

# d_botw <- read_sf(botw_gpkg, "main_BL_HBW_Checklist_V9") |> 
#   clean_names()
# names(d_botw)
#  [1] "seq"                         "order"                      
#  [3] "family_name"                 "family"                     
#  [5] "subfamily"                   "tribe"                      
#  [7] "common_name"                 "scientific_name"            
#  [9] "authority"                   "iucn_red_list_category_2024"
# [11] "synonyms"                    "alternative_common_names"   
# [13] "taxonomic_sources"           "sis_rec_id"                 
# [15] "spc_rec_id"                 

  
d_bird <- d_bird |> 
  mutate(
    itis_id  = is.(itis_id),
    worms_id = as.integer(worms_id),
    gbif_id  = as.integer(gbif_id))

d_bird |> 
  mutate(itis_na = is.na(itis_id)) |> 
  select(itis_na, ds_key) |> 
  table(useNA = "ifany")
# FALSE  TRUE 
#    99   575
```

```{r notbirds_worms_rn_deleted}
# AphiaID: 1780766 has been DELETED  - reason: Wrong combination (Dekker, Henk)
# Please replace it by AphiaID: 607159 (Agathistoma Olsson & Harbison, 1953)
dbExecute(
  con_sdm, 
  "UPDATE species SET worms_id = 607159 WHERE worms_id = 1780766") # 1
```

```{r notbird_rl_wormsidna}
# not bird, worms_id is NA, has redlist code
d_nb_wn_rl <- tbl(con_sdm, "species") |> 
  filter(
    is.na(worms_id),
    !is.na(redlist_code),
    sp_cat != "bird") |> 
  collect()

d_nb_wn_rl |> 
  arrange(sp_cat, scientific_name_dataset, common_name_dataset, ds_key, sp_key) |>
  select(sp_cat, scientific_name_dataset, common_name_dataset, ds_key, sp_key) |>
  print(n = Inf)
# # A tibble: 22 × 5
#    sp_cat       scientific_name_dataset       common_name_dataset        ds_key  sp_key        
#    <chr>        <chr>                         <chr>                      <chr>   <chr>         
#  1 invertebrate Ancistroteuthis lichtensteini angel squid                am_0.05 SLB-71652     
#  2 invertebrate Argonauta cornuta             NA                         am_0.05 SLB-70961     
#  3 invertebrate Holothuria dakarensis         NA                         am_0.05 SLB-66007     
#  4 invertebrate Holothuria dofleinii          NA                         am_0.05 SLB-91447     
#  5 invertebrate Holothuria dura               NA                         am_0.05 SLB-169639    
#  6 invertebrate Holothuria floridana          Florida sea cucumber       am_0.05 SLB-66009     
#  7 invertebrate Holothuria kefersteinii       NA                         am_0.05 SLB-182810    
#  8 invertebrate Holothuria martensii          NA                         am_0.05 SLB-189914    
#  9 invertebrate Holothuria parvula            NA                         am_0.05 SLB-66018     
# 10 invertebrate Holothuria rigida             rigid sea cucumber         am_0.05 SLB-92934     
# 11 mammal       Delphinus capensis            long-beaked common dolphin am_0.05 ITS-Mam-555654
# 12 other        Halodule uninervis            needle seagrass            am_0.05 Kew-308064    
# 13 other        Halodule wrightii             shoal grass                am_0.05 Kew-308065    
# 14 other        Halophila decipiens           NA                         am_0.05 Kew-308072    
# 15 other        Halophila ovalis              spoon seagrass             am_0.05 Kew-308085    
# 16 other        Halophila spinulosa           fern seagrass              am_0.05 Kew-308090    
# 17 other        Ruppia maritima               NA                         am_0.05 Kew-308804    
# 18 other        Syringodium filiforme         manatee grass              am_0.05 Kew-288211    
# 19 other        Thalassia testudinum          turtle grass               am_0.05 Kew-308879    
# 20 other        Thalassodendron ciliatum      NA                         am_0.05 Kew-293259    
# 21 turtle       Aipysurus eydouxii            spine-tailed seasnake      am_0.05 Rep-467       
# 22 turtle       Hydrophis macdowelli          McDowell's sea snake       am_0.05 Rep-5028 

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 255028,
        scientific_name_accepted = 'Pusa hispida hispida',
        common_name_accepted     = 'Arctic ringed seal'
    WHERE ds_key = 'ch_nmfs' AND scientific_name_dataset = 'Phoca (=Pusa) hispida hispida'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 137079,
        scientific_name_accepted = 'Erignathus barbatus',
        common_name_accepted     = 'bearded seal'
    WHERE ds_key = 'ch_nmfs' AND scientific_name_dataset = 'Erignathus barbatus nauticus'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 137079,
        scientific_name_accepted = 'Erignathus barbatus',
        common_name_accepted     = 'bearded seal'
    WHERE ds_key = 'ch_nmfs' AND scientific_name_dataset = 'Erignathus barbatus nauticus'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 344064,
        scientific_name_accepted = 'Hydrophis mcdowelli',
        common_name_accepted     = 'McDowell''s sea snake'
    WHERE ds_key = 'am_0.05' AND scientific_name_dataset = 'Hydrophis macdowelli'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 140647,
        scientific_name_accepted = 'Ancistroteuthis lichtensteinii',
        common_name_accepted     = 'angel squid'
    WHERE ds_key = 'am_0.05' AND scientific_name_dataset = 'Ancistroteuthis lichtensteini'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 341786,
        scientific_name_accepted = 'Argonauta nouryi',
        common_name_accepted     = 'rough-keeled argonaut'
    WHERE ds_key = 'am_0.05' AND scientific_name_dataset = 'Argonauta cornuta'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 124495,
        scientific_name_accepted = 'Holothuria (Holothuria) dakarensis',
        common_name_accepted     = NULL
    WHERE ds_key = 'am_0.05' AND scientific_name_dataset = 'Holothuria dakarensis'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 210842,
        scientific_name_accepted = 'Holothuria (Stauropora) dofleinii',
        common_name_accepted     = NULL
    WHERE ds_key = 'am_0.05' AND scientific_name_dataset = 'Holothuria dofleinii'") # 1

dbExecute(
  con_sdm, 
    "UPDATE species
    SET worms_id                 = 137094,
        scientific_name_accepted = 'Delphinus delphis',
        common_name_accepted     = 'long-beaked common dolphin'
    WHERE ds_key = 'am_0.05' AND scientific_name_dataset = 'Delphinus capensis'") # 1

d_nb_wn_rl |> 
  arrange(sp_cat, redlist_code, scientific_name_dataset, common_name_dataset, ds_key, sp_key) |>
  select(sp_cat, RL = redlist_code, scientific_name_dataset, common_name_dataset, ds_key, sp_key) |>
  print(n = Inf)
# # A tibble: 17 × 6
#    sp_cat       RL    scientific_name_dataset  common_name_dataset        ds_key  sp_key        
#    <chr>        <chr> <chr>                    <chr>                      <chr>   <chr>         
#  1 invertebrate DD    Holothuria dura          NA                         am_0.05 SLB-169639    
#  2 invertebrate DD    Holothuria kefersteinii  NA                         am_0.05 SLB-182810    
#  3 invertebrate DD    Holothuria martensii     NA                         am_0.05 SLB-189914    
#  4 invertebrate LC    Holothuria floridana     Florida sea cucumber       am_0.05 SLB-66009     
#  5 invertebrate LC    Holothuria parvula       NA                         am_0.05 SLB-66018     
#  6 invertebrate LC    Holothuria rigida        rigid sea cucumber         am_0.05 SLB-92934     
#  7 mammal       DD    Delphinus capensis       long-beaked common dolphin am_0.05 ITS-Mam-555654
#  8 other        LC    Halodule uninervis       needle seagrass            am_0.05 Kew-308064    
#  9 other        LC    Halodule wrightii        shoal grass                am_0.05 Kew-308065    
# 10 other        LC    Halophila decipiens      NA                         am_0.05 Kew-308072    
# 11 other        LC    Halophila ovalis         spoon seagrass             am_0.05 Kew-308085    
# 12 other        LC    Halophila spinulosa      fern seagrass              am_0.05 Kew-308090    
# 13 other        LC    Ruppia maritima          NA                         am_0.05 Kew-308804    
# 14 other        LC    Syringodium filiforme    manatee grass              am_0.05 Kew-288211    
# 15 other        LC    Thalassia testudinum     turtle grass               am_0.05 Kew-308879    
# 16 other        LC    Thalassodendron ciliatum NA                         am_0.05 Kew-293259    
# 17 turtle       LC    Aipysurus eydouxii       spine-tailed seasnake      am_0.05 Rep-467
```

```{r notbirds_wormsid_ds_duplicates}
# get not birds, with worms_id, across datasets
# d_notbird |> 
#   mutate(worms_na = is.na(worms_id)) |> 
#   select(worms_na, ds_key) |> 
#   table(useNA = "ifany")
#         ds_key
# worms_na am_0.05 ch_fws ch_nmfs rng_fws
#    FALSE   16852     11       0      24
#    TRUE      697      0      34       0

# count of species with duplicate worms_id, across datasets
# tbl(con_sdm, "species") |>
#   filter(
#     !is.na(worms_id)) |>
#   group_by(sp_cat, ds_key, worms_id) |> 
#   summarize(
#     n = n(),
#     .groups = "drop") |> 
#   filter(n > 1) |> 
#   collect()
# # A tibble: 189 × 4  
#    sp_cat       ds_key  worms_id     n
#    <chr>        <chr>      <int> <dbl>
#  1 other        am_0.05   157583     2
#  2 invertebrate am_0.05   140015     2
#  3 invertebrate am_0.05   117887     2
#  4 other        am_0.05  1491000     2
#  5 invertebrate am_0.05   146733     2
#  6 invertebrate am_0.05   216636     2
#  7 other        am_0.05   105444     2
#  8 invertebrate am_0.05   440094     2
#  9 invertebrate am_0.05   420788     2
# 10 invertebrate am_0.05   104548     2
# # ℹ 179 more rows
# # ℹ Use `print(n = ...)` to see more rows

# dataset key for not birds, without worms_id
# tbl(con_sdm, "species") |> 
#   filter(
#     sp_cat != "bird") |> 
#   mutate(
#     worms_na = is.na(worms_id)) |> 
#   select(ds_key, worms_na) |> 
#   collect() |> 
#   table(useNA = "ifany")
#          worms_na    
# ds_key    FALSE  TRUE
#   am_0.05 17126   423
#   ch_fws     11     0
#   ch_nmfs    34     0
#   rng_fws    24     0

# redlist code for not birds, without worms_id, (all AquaMaps)
# tbl(con_sdm, "species") |> 
#   filter(
#     is.na(worms_id),
#     sp_cat != "bird",
#     ds_key == "am_0.05") |> 
#   mutate(
#     worms_na = is.na(worms_id)) |> 
#   select(sp_cat, redlist_code) |> 
#   collect() |> 
#   table(useNA = "ifany")
#               redlist_code
# sp_cat          DD  LC <NA>
#   coral          0   0    4
#   invertebrate   3   3  141
#   other          0   9  262
#   turtle         0   1    0

# not birds, with worms_id
d_nb <- tbl(con_sdm, "species") |>
  filter(
    !is.na(worms_id),
    sp_cat != "bird") |>  # 17,195
  left_join(
    tbl(con_sdm, "model") |> 
      select(mdl_seq, taxa),
    by = join_by(taxa)) |> 
  collect()               # 17,195

# check mdl_seq is all not NA, and not duplicated
stopifnot(d_nb |> filter(is.na(mdl_seq)) |> nrow() == 0)
stopifnot(d_nb |> filter(duplicated(mdl_seq)) |> nrow() == 0)

# get duplicate worms_id in d_nb
w_dupe_ds <- d_nb |> 
  group_by(worms_id, ds_key) |> 
  summarize(
    n = n(),
    .groups = "drop") |> 
  filter(n != 1) |> 
  pull(worms_id)
# length(w_dupe_ds) # 189

# of duplicates, prefer scientific_name_dataset with taxonomicStatus == "accepted"
d_w_dupe_ds <- d_nb |> 
  filter(
    worms_id %in% w_dupe_ds,
    ds_key == "am_0.05") |> 
  left_join(
    tbl(con_spp, "worms") |> 
      filter(taxonID %in% w_dupe_ds) |> 
      select(scientificName, taxonomicStatus) |> 
      collect(),
    by = join_by(scientific_name_dataset == scientificName)) |> 
  filter(
    !is.na(taxonomicStatus),
    taxonomicStatus == "accepted")
stopifnot(sum(duplicated(d_w_dupe_ds$worms_id)) == 0)

# get remaining duplicates, without taxonomicStatus match
w_dupe_ds2 <- setdiff(w_dupe_ds, d_w_dupe_ds$worms_id)

# get remaining duplicates, as data frame
d_w_dupe_ds2 <-  d_nb |> 
  filter(
    worms_id %in% w_dupe_ds2,
    ds_key == "am_0.05") |> 
  left_join(
    tbl(con_spp, "worms") |> 
      filter(taxonID %in% w_dupe_ds2) |> 
      select(taxonID, scientificName) |> 
      collect(),
    by = join_by(worms_id == taxonID)) # 42 × 19

# duplicates2: arrange data frame for manually identifying preferred taxa of same worms_id
d_w_dupe_ds2 |> 
  select(
    sp_cat, worms_id, 
    sci_ds    = scientific_name_dataset, 
    sci_worms = scientificName, 
    cmn_ds    = common_name_dataset,
    rl        = redlist_code,
    taxa) |>
  arrange(sp_cat, worms_id, sci_ds)
w_dupe_ds2_csv <- here("data/aquamaps_worms_duplicate_preferred.csv")
if (!file.exists(w_dupe_ds2_csv))
  write_csv(d_w_dupe_ds2, w_dupe_ds2_csv)
  # then manually added worms_preferred column with T values
d_w_dupe_ds2 <- read_csv(w_dupe_ds2_csv)
# read in edits
d_am_taxa_worms_pref <- d_w_dupe_ds2 |> 
  filter(worms_preferred == T) |> 
  select(worms_id, taxa) |> 
  bind_rows( # bind with taxonomicStatus == "accepted"
    d_w_dupe_ds |> 
      select(worms_id, taxa))
stopifnot(duplicated(d_am_taxa_worms_pref$worms_id) |> sum() == 0)

# d_nb_0 <- d_nb
d_nb <- bind_rows(
  d_nb |>                                             #     d_nb: 17,195 × 18
    filter(
      worms_id %in% d_am_taxa_worms_pref$worms_id,
      taxa     %in% d_am_taxa_worms_pref$taxa),       # AM dupes:    189 × 18
  d_nb |>
    filter(
      !worms_id %in% d_am_taxa_worms_pref$worms_id) ) # notdupes: 16,813
```

```{r notbirds_wormsid_ds_pivoted}
# not birds, by dataset pivoted
d_nb_ds <- d_nb |>
  group_by(worms_id) |>
  mutate(
    n_ds = n()) |> 
  ungroup() |> 
  pivot_wider(
    id_cols     = c(worms_id, n_ds),
    names_from  = ds_key,
    values_from = mdl_seq)

d_nb_ds |> 
  arrange(desc(n_ds), worms_id) |>
  filter(n_ds > 1) |> 
  print(n = Inf)
# # A tibble: 42 × 6
#    worms_id  n_ds am_0.05 ch_nmfs ch_fws rng_fws
#       <int> <int>   <int>   <int>  <int>   <int>
#  1   127186     4    7466   18230  18309   18401
#  2   137205     4    1173   18243  18291   18342
#  3   137206     4    1708   18244  18294   18345
#  4   137207     4    2106   18246  18301   18357
#  5   137209     4      25   18245  18297   18350
#  6   159509     3    6479      NA  18313   18415
#  7   422566     3    7918      NA  18296   18349
#  8  1805509     3      NA   18226  18287   18318
#  9   105848     2    7288   18229     NA      NA
# 10   126505     2     881      NA     NA   18365
# 11   137079     2     782   18234     NA      NA
# 12   137085     2      NA      NA  18314   18416
# 13   137092     2       2   18238     NA      NA
# 14   137102     2       4   18240     NA      NA
# 15   137104     2      79   18242     NA      NA
# 16   137115     2     355   18233     NA      NA
# 17   137208     2    2551      NA     NA   18376
# 18   158075     2     970   18228     NA      NA
# 19   159023     2    1845   18235     NA      NA
# 20   159222     2    5980   18227     NA      NA
# 21   206989     2   10777   18213     NA      NA
# 22   220293     2    2522      NA     NA   18377
# 23   242600     2      NA      NA  18299   18354
# 24   254570     2     935      NA     NA   18402
# 25   254974     2     440   18236     NA      NA
# 26   254999     2     803   18237     NA      NA
# 27   274347     2    2516      NA     NA   18385
# 28   280737     2      NA      NA  18302   18358
# 29   282844     2    2597      NA     NA   18406
# 30   288227     2    9656   18215     NA      NA
# 31   290426     2   13208   18221     NA      NA
# 32   405012     2   12061   18231     NA      NA
# 33   418865     2    8056   18218     NA      NA
# 34   430645     2   11166   18214     NA      NA
# 35   430653     2   12678   18216     NA      NA
# 36   730691     2   15414   18220     NA      NA
# 37   758260     2    3413   18222     NA      NA
# 38   758261     2    4071   18223     NA      NA
# 39   758262     2    3791   18224     NA      NA
# 40  1663107     2    2722   18239     NA      NA
# 41  1815696     2    6349   18225     NA      NA
# 42  1815701     2    7347      NA     NA   18317
```

```{r update_turtle_to_reptile}
# convert all "turtle" sp_cat to "reptile", b/c some sea snakes
dbExecute(con_sdm, "UPDATE species SET sp_cat = 'reptile' WHERE sp_cat = 'turtle'") # 49
```

```{r bird_bl_to_botwid}
# birds
d_b <- tbl(con_sdm, "species") |>
  filter(
    sp_cat == "bird") |>
  left_join(
    tbl(con_sdm, "model") |>
      select(mdl_seq, taxa),
    by = join_by(taxa)) |>
  collect()  # 674

# see ingest_taxon.qmd: botw, botw_vernacular -> con_spp

d_b |> 
  group_by(ds_key) |>
  summarize(
    n = n(),
    .groups = "drop")
#   ds_key      n
#   <chr>   <int>
# 1 am_0.05     1
# 2 bl        573
# 3 ch_fws     18
# 4 rng_fws    82

# convert bl sp_key to botw_id
dbExecute(con_sdm, "ALTER TABLE species ADD COLUMN IF NOT EXISTS botw_id BIGINT")
dbExecute(
  con_sdm, 
    "UPDATE species
    SET botw_id = REPLACE(sp_key, 'bl:', '')::BIGINT
    WHERE ds_key = 'bl'") # 573
```


```{r birds_notbl_to_botwid}
d <- tbl(con_sdm, "species") |>
  filter(
    sp_cat == "bird",
    ds_key != "bl") |> 
  collect()

# d$scientific_name_dataset |> str_subset("\\(") |> 
# "Branta (=Nesochen) sandvicensis"  "Phoebastria (=Diomedea) albatrus"
# str_remove_all("\\(=[^)]+\\)") |> str_squish()
# "Branta sandvicensis"  "Phoebastria albatrus"

d <- d |> 
  mutate(
    scientific_name_clean = scientific_name_dataset |> 
      str_remove_all("\\(=[^)]+\\)") |> 
      str_squish())

d2 <- d |> # names()
  left_join(
    tbl(con_spp, "botw") |>
      filter(scientificName %in% d$scientific_name_clean) |> 
      select(
        scientificName, 
        botw_id_new          = acceptedNameUsageID,
        botw_scientific_name = acceptedNameUsage) |> 
    collect(),
    by = join_by(scientific_name_clean == scientificName)) |> 
  filter(!is.na(botw_id_new)) |>
  select(sp_key, botw_id, botw_id_new) # 62

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET botw_id = d2.botw_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 62
duckdb_unregister(con_sdm, "d2")
```

```{r birds_notbl_to_botwid_common_ds}
d <- tbl(con_sdm, "species") |>
  filter(
    sp_cat == "bird",
    ds_key != "bl",
    is.na(botw_id)) |> 
  collect() |> 
  mutate(
    common_lwr = str_to_lower(common_name_dataset) |> str_trim()) # 39

d2 <- d |> # names()
  left_join(
    tbl(con_spp, "botw_vernacular") |>
      mutate(
        common_lwr = str_to_lower(vernacularName) |> str_trim()) |> 
      filter(common_lwr %in% d$common_lwr) |> 
      select(
        botw_id_new = taxonID,
        common_lwr) |> 
      collect(),
    by = join_by(common_lwr)) |> 
  filter(!is.na(botw_id_new)) |>
  select(sp_key, botw_id, botw_id_new) # 4

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET botw_id = d2.botw_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 4
duckdb_unregister(con_sdm, "d2")
```

```{r birds_notbl_to_botwid_common_acc}
d <- tbl(con_sdm, "species") |>
  filter(
    sp_cat == "bird",
    ds_key != "bl",
    is.na(botw_id)) |> 
  collect() |> 
  mutate(
    common_lwr = str_to_lower(common_name_accepted) |> str_trim()) # 35

d2 <- d |> # names()
  left_join(
    tbl(con_spp, "botw_vernacular") |>
      mutate(
        common_lwr = str_to_lower(vernacularName) |> str_trim()) |> 
      filter(common_lwr %in% d$common_lwr) |> 
      select(
        botw_id_new = taxonID,
        common_lwr) |> 
      collect(),
    by = join_by(common_lwr)) |> 
  filter(!is.na(botw_id_new)) |>
  select(sp_key, botw_id, botw_id_new) # 5

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET botw_id = d2.botw_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 4
duckdb_unregister(con_sdm, "d2")
```

```{r birds_notbl_to_botwid_rmsubsp}
d <- tbl(con_sdm, "species") |>
  filter(
    sp_cat == "bird",
    ds_key != "bl",
    is.na(botw_id)) |> 
  collect() |> 
  mutate(
    genus   = scientific_name_accepted |> 
      str_split_i("\\s", 1),
    species =  scientific_name_accepted |> 
      str_split_i("\\s", 2),
    genus_species = glue("{genus} {species}"))

d2 <- d |> # names()
  left_join(
    tbl(con_spp, "botw") |>
      filter(scientificName %in% d$genus_species) |> 
      select(
        scientificName, 
        botw_id_new          = acceptedNameUsageID,
        botw_scientific_name = acceptedNameUsage) |> 
    collect(),
    by = join_by(genus_species == scientificName)) |> 
  filter(!is.na(botw_id_new)) |>
  select(sp_key, botw_id, botw_id_new) # 30

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE species
    SET botw_id = d2.botw_id_new 
    FROM d2
    WHERE species.sp_key = d2.sp_key") # 62
duckdb_unregister(con_sdm, "d2")

# yay, all matched!
stopifnot(
  tbl(con_sdm, "species") |>
    filter(
      sp_cat == "bird",
      is.na(botw_id)) |> 
    collect() |> 
    nrow() == 0)
```


```{r birds_botwid_ds_duplicates}
# birds, by dataset
d_b <- tbl(con_sdm, "species") |>
  filter(
    sp_cat == "bird",
    !is.na(botw_id)) |> # 674
  left_join(
    tbl(con_sdm, "model") |>
      select(mdl_seq, taxa),
    by = join_by(taxa)) |>
  collect() |>         # 674
  group_by(botw_id) |>
  mutate(
    n_ds = n()) |> 
  ungroup()

# pick sp_key from duplicate(ds_key, botw_id), all from rng_fws
b_ds_dupes <- d_b |> 
  group_by(botw_id, ds_key) |> 
  summarize(
    n = n(),
    sp_key_1 = first(sp_key), 
    sp_key_2 = last(sp_key), 
    sp_sci_1 = first(scientific_name_accepted),
    sp_sci_2 = last(scientific_name_accepted),
    sp_cmn_1 = first(common_name_accepted),
    sp_cmn_2 = last(common_name_accepted),
    .groups = "drop") |> 
  filter(n != 1)
b_ds_dupes |> 
  select(-ds_key, -n)
# A tibble: 5 × 7
#    botw_id sp_key_1     sp_key_2     sp_sci_1                         sp_sci_2               sp_cmn_1 sp_cmn_2
#      <dbl> <chr>        <chr>        <chr>                            <chr>                  <chr>    <chr>   
# 1 22684331 rng_fws:B06R rng_fws:B0FV Coccyzus americanus              Coccyzus americanus    yellow-… Yellow-…
# 2 22689089 rng_fws:B08B rng_fws:B08L Strix occidentalis caurina       Strix occidentalis oc… Norther… Califor…
# 3 22692353 rng_fws:B09A rng_fws:B0OB Laterallus jamaicensis           Laterallus jamaicensi… black r… Eastern…
# 4 22721123 rng_fws:B0NI rng_fws:B00Q Ammospiza maritima macgillivraii Ammospiza maritima mi… MacGill… Cape Sa…
# 5 22731577 rng_fws:B04B rng_fws:B04A Rallus obsoletus levipes         Rallus obsoletus obso… Light-f… Califor…

d_b <- bind_rows(
  d_b |>                                              #           d_b: 674 -> 666
    filter(
      botw_id %in% b_ds_dupes$botw_id,
      sp_key  %in% b_ds_dupes$sp_key_1),              # rng_fws dupes:   5
  d_b |>
    filter(
      !botw_id %in% b_ds_dupes$botw_id) )             #      notdupes: 661
```

```{r birds_botwid_ds_pivoted}
d_b_ds <- d_b |> 
  pivot_wider(
    id_cols     = c(botw_id, n_ds),
    names_from  = ds_key,
    values_from = mdl_seq)

d_b_ds |> 
  arrange(desc(n_ds), botw_id) |>
  filter(n_ds > 1) |> 
  print(n = Inf)
# A tibble: 49 × 6
#      botw_id  n_ds rng_fws    bl ch_fws am_0.05
#        <dbl> <int>   <int> <int>  <int>   <int>
#  1  22680412     3   18405 18012  18310      NA
#  2  22680415     3   18390 17929  18307      NA
#  3  22684331     3   18346    NA     NA      NA
#  4  22689089     3   18409    NA     NA      NA
#  5  22692353     3   18374    NA     NA      NA
#  6  22693363     3   18340 17648  18290      NA
#  7  22693811     3   18343 17678  18292      NA
#  8  22694870     3   18336 17626  18289      NA
#  9  22705959     3   18348 17705  18295      NA
# 10  22717434     3   18356 17728  18300      NA
# 11  22725033     3   18344 17680  18293      NA
# 12  22678620     2   18378 17846     NA      NA
# 13  22680199     2   18330 17583     NA      NA
# 14  22681158     2   18352 17826     NA      NA
# 15  22686259     2   18323 17576     NA      NA
# 16  22689809     2   18332 17596     NA      NA
# 17  22691410     2   18396 17967     NA      NA
# 18  22692705     2   18391 18085     NA      NA
# 19  22692920     2   18360 17755     NA      NA
# 20  22693182     2   18384 17875     NA      NA
# 21  22694455     2   18421 17810     NA      NA
# 22  22694601     2   18407 18159     NA      NA
# 23  22694673     2   18408 18032     NA      NA
# 24  22694875     2   18335 17625     NA      NA
# 25  22695144     2   18370 17783     NA      NA
# 26  22695891     2   18338 17639     NA      NA
# 27  22695929     2   18339 17640     NA      NA
# 28  22696060     2   18334 17600     NA      NA
# 29  22696694     2      NA 18038     NA   10651
# 30  22698017     2   18395 17962     NA      NA
# 31  22698088     2   18393 17947     NA      NA
# 32  22698092     2   18394 17953     NA      NA
# 33  22698335     2   18388 17915     NA      NA
# 34  22699848     2   18353    NA  18298      NA
# 35  22703868     2   18382 17869     NA      NA
# 36  22711585     2   18389    NA  18306      NA
# 37  22714047     2   18420    NA  18315      NA
# 38  22721123     2   18326    NA     NA      NA
# 39  22721618     2   18417 18076     NA      NA
# 40  22724209     2   18322    NA  18288      NA
# 41  22725862     2   18414    NA  18312      NA
# 42  22727969     2   18371 18139     NA      NA
# 43  22731577     2   18398    NA     NA      NA
# 44  22733989     2   18387 17904     NA      NA
# 45  22734130     2   18316 17556     NA      NA
# 46  62101215     2   18411 18041     NA      NA
# 47  62120280     2   18363 17761     NA      NA
# 48 132341128     2   18372 18260     NA      NA
# 49 132467692     2   18397 18274     NA      NA
```

```{r bind_birds_notbirds_ds}
setdiff(names(d_nb_ds), names(d_b_ds)) # "worms_id" "ch_nmfs" 
setdiff(names(d_b_ds), names(d_nb_ds)) # "botw_id"  "bl"

d_nb_cat <- tbl(con_sdm, "species") |> 
  filter(
    !is.na(sp_cat),
    sp_cat != "bird") |>
  distinct(worms_id, sp_cat) |> 
  collect()

d_taxon <- bind_rows(
  d_nb_ds |>                           # 16,947 × 6
    rename(
      taxon_id = worms_id) |> 
    mutate(
      taxon_authority = "worms") |> 
    left_join(
      d_nb_cat,
      by = join_by(taxon_id == worms_id)),
  d_b_ds |>                            #    614 × 6
    rename(
      taxon_id = botw_id) |> 
    mutate(
      taxon_authority = "botw",
      sp_cat          = "bird")) |>  
  relocate(taxon_id, taxon_authority)  # 17,561 × 8

# check if taxon_id is unique, ie botw_id not clashing with worms_id
stopifnot(sum(duplicated(d_taxon$taxon_id)) == 0)

# assign mdl_seq for taxon with one dataset
d_taxon <- bind_rows(                             # 17,561 × 8 -> 9
  d_taxon |> 
    filter(n_ds == 1) |> 
    mutate(
      mdl_seq = coalesce(
        am_0.05, ch_nmfs, ch_fws, rng_fws, bl)),  # 17,470
  d_taxon |> 
    filter(n_ds > 1))                             #     91
```

```{r notbirds_worms_sci}
d <- d_taxon |> 
  filter(
    taxon_authority == "worms") |> # 16,947
  select(taxon_id)

d <- d |> 
  left_join(
    tbl(con_spp, "worms") |> 
      filter(taxonID %in% d$taxon_id) |>
      mutate(
        scientific_name = coalesce(acceptedNameUsage, scientificName)) |>
      select(
        taxon_id = taxonID, 
        scientific_name) |>
      collect(),
    by = join_by(taxon_id))

stopifnot(sum(is.na(d$scientific_name)) == 0)

d_taxon <- bind_rows(
  d_taxon |> 
    filter(taxon_authority == "worms") |> 
    left_join(
      d,
      by = join_by(taxon_id)),
  d_taxon |> 
    filter(taxon_authority != "worms"))
```

```{r birds_botw_sci}
d <- d_taxon |> 
  filter(
    taxon_authority == "botw") |> # 16,947
  select(taxon_id)

d <- d |> 
  left_join(
    tbl(con_spp, "botw") |> 
      filter(taxonID %in% d$taxon_id) |>
      select(
        taxon_id        = taxonID, 
        scientific_name = scientificName) |>
      collect(),
    by = join_by(taxon_id))

stopifnot(sum(is.na(d$scientific_name)) == 0)

d_taxon <- bind_rows(
  d_taxon |> 
    filter(taxon_authority == "botw") |> 
    select(-scientific_name) |> 
    left_join(
      d,
      by = join_by(taxon_id)),
  d_taxon |> 
    filter(taxon_authority != "botw"))
```

```{r birds_cmn}
d <- d_taxon |> 
  filter(
    taxon_authority == "botw") |> # 614
  select(taxon_id)

d <- d |> 
  left_join(
    tbl(con_spp, "botw_vernacular") |> 
      filter(taxonID %in% d$taxon_id) |>
      select(
        taxon_id    = taxonID, 
        common_name = vernacularName,
        isPreferredName) |>
      collect(),
    by = join_by(taxon_id)) |> 
  slice_max(
    by        = taxon_id,
    order_by  = isPreferredName, 
    with_ties = F) |> 
  select(-isPreferredName)

stopifnot(sum(is.na(d$common_name)) == 0)
# yay, all bird common names matched!

d_taxon <- bind_rows(
  d_taxon |> 
    filter(taxon_authority == "botw") |> 
    # select(-scientific_name) |> 
    left_join(
      d,
      by = join_by(taxon_id)),
  d_taxon |> 
    filter(taxon_authority != "botw"))
```

```{r notbirds_cmn}
d <- d_taxon |> 
  filter(
    taxon_authority == "worms") |> 
  select(taxon_id)                  # 16,947 x 1

# worms_vernacular ----
d <- d |> 
  left_join(
    tbl(con_spp, "worms_vernacular") |> 
      filter(
        taxonID %in% d$taxon_id,
        language == "ENG") |>
      select(
        taxon_id    = taxonID, 
        common_name = vernacularName,
        isPreferredName) |>
      collect(),
    by = join_by(taxon_id)) |> 
  slice_max(
    by        = taxon_id,
    order_by  = isPreferredName, 
    with_ties = F) |> 
  select(-isPreferredName)         # 16,947 x 2

# table(is.na(d$common_name))
# FALSE  TRUE 
#  5594 11353
# so 11,353 still without common name

# species.common_name_accepted ----
w2 <- d |> 
  filter(is.na(common_name)) |> 
  pull(taxon_id)

d2 <- tbl(con_sdm, "species") |> 
  filter(
    worms_id %in% w2,
    !is.na(common_name_accepted)) |> 
  select(
    taxon_id    = worms_id, 
    common_name = common_name_accepted) |> 
  collect() |> 
  mutate(
    # src       = "species.common_name_accepted",
    has_comma = str_detect(common_name, ",")) |> 
  filter(!is.na(common_name)) |> 
  arrange(taxon_id, has_comma, common_name) |> 
  slice_min(
    by        = taxon_id,
    order_by  = has_comma, 
    with_ties = F) |>  # 16
  select(-has_comma)
  
d <- bind_rows(
  d |> 
    filter(!taxon_id %in% d2$taxon_id),
  d2)

# table(is.na(d$common_name))
# FALSE  TRUE 
#  5610 11337
# so 11,337 still without common name

# species.common_name_dataset ----
w3 <- d |> 
  filter(is.na(common_name)) |> 
  pull(taxon_id)

d3 <- tbl(con_sdm, "species") |> 
  filter(
    worms_id %in% w3,
    !is.na(common_name_dataset)) |> 
  select(
    taxon_id    = worms_id, 
    common_name = common_name_dataset) |> 
  collect() |> 
  mutate(
    # src       = "species.common_name_accepted",
    has_comma = str_detect(common_name, ",")) |> 
  filter(!is.na(common_name)) |> 
  arrange(taxon_id, has_comma, common_name) |> 
  slice_min(
    by        = taxon_id,
    order_by  = has_comma, 
    with_ties = F) |>  # 16
  select(-has_comma)
  
d <- bind_rows(
  d |> 
    filter(!taxon_id %in% d3$taxon_id),
  d3)

# table(is.na(d$common_name))
# FALSE  TRUE 
# 10579  6368
# so 6,368 still without common name

d_taxon <- bind_rows(
  d_taxon |> 
    filter(taxon_authority == "worms") |> 
    select(-common_name) |> 
    left_join(
      d,
      by = join_by(taxon_id)),
  d_taxon |> 
    filter(taxon_authority != "worms"))
```

```{r taxon_to_db}
# skim(d_taxon)
# ── Data Summary ────────────────────────
#                            Values 
# Name                       d_taxon
# Number of rows             17561  
# Number of columns          12     
# _______________________           
# Column type frequency:            
#   character                4      
#   numeric                  8      
# ________________________          
# Group variables            None   
# 
# ── Variable type: character ──────────────────────────────────────────────────────
#   skim_variable   n_missing complete_rate min max empty n_unique whitespace
# 1 taxon_authority         0         1       4   5     0        2          0
# 2 sp_cat                  0         1       4  12     0        7          0
# 3 scientific_name         0         1       6  45     0    17561          0
# 4 common_name          6368         0.637   3 102     0    10955          0
# 
# ── Variable type: numeric ────────────────────────────────────────────────────────
#   skim_variable n_missing complete_rate       mean           sd     p0     p25
# 1 taxon_id              0       1       1399372.   7630567.     100599 210492 
# 2 n_ds                  0       1             1.01       0.0990      1      1 
# 3 am_0.05             626       0.964      8780.      5080.          1   4372.
# 4 ch_nmfs           17528       0.00188   18230.         9.86    18213  18222 
# 5 ch_fws            17533       0.00159   18301.         8.45    18287  18294.
# 6 rng_fws           17460       0.00575   18368.        30.7     18316  18342 
# 7 bl                16990       0.0325    17869.       195.      17554  17704.
# 8 mdl_seq              91       0.995      9088.      5252.          1   4537.
#       p50     p75      p100 hist 
# 1 276334  420043  230027154 ▇▁▁▁▁
# 2      1       1          4 ▇▁▁▁▁
# 3   8804   13160.     17550 ▇▇▇▇▇
# 4  18230   18238      18246 ▇▇▇▇▇
# 5  18300.  18307.     18315 ▇▇▇▇▇
# 6  18368   18394      18421 ▇▇▇▇▇
# 7  17860   18014.     18284 ▇▇▇▆▃
# 8   9114.  13616.     18419 ▇▇▇▇▇


if (dbExistsTable(con_sdm, "taxon"))
  dbExecute(con_sdm, "DELETE FROM taxon")

dbWriteTable(con_sdm, "taxon", d_taxon, append = F)

tmp_taxon_csv <- here("data/tmp_taxon.csv")
if (!file_exists(tmp_taxon_csv))
  write_csv(d_taxon, tmp_taxon_csv)
# TODO: update mdl_seq in taxon table
```

```{r taxon_redlist_code}
d <- tbl(con_sdm, "taxon") |> 
  mutate(
    worms_id = ifelse(taxon_authority == "worms", taxon_id, NA_integer_),
    botw_id  = ifelse(taxon_authority == "botw",  taxon_id, NA_integer_)) |> 
  select(taxon_id, taxon_authority, worms_id, botw_id) |> 
  collect()
    
d_b <- d |> 
  filter(
    taxon_authority == "botw",
    !is.na(botw_id)) |>
  select(-worms_id) |> 
  left_join(
    tbl(con_sdm, "species") |> 
      filter(
        sp_cat == "bird",
        !is.na(botw_id),
        !is.na(redlist_code)) |> 
      select(botw_id, redlist_code) |> 
      collect(),
    by = join_by(botw_id)) |>
  collect() |> 
  mutate(
    rl_fct = factor(
      redlist_code,
      levels = c("EX", "DD", "LC", "NT", "TN", "VU", "EN", "CR"),
      ordered = T)) |>     # 674 × 5
  arrange(taxon_id, rl_fct) |> 
  group_by(taxon_id) |> 
  summarize(
    # n_rl         = n(),
    rl_max       = max(rl_fct) |> as.character(),
    # redlist_code = paste(redlist_code, collapse = ', '),
    .groups = "drop") # |>  # 614 × 2
  # arrange(desc(n_rl))   
  
d_w <- d |> 
  filter(
    taxon_authority == "worms",
    !is.na(worms_id)) |>
  select(-botw_id) |> 
  left_join(
    tbl(con_sdm, "species") |> 
      filter(
        sp_cat != "bird",
        !is.na(worms_id),
        !is.na(redlist_code)) |> 
      select(worms_id, redlist_code) |> 
      collect(),
    by = join_by(worms_id)) |>
  collect() |> 
  mutate(
    rl_fct = factor(
      redlist_code,
      levels = c("EX", "DD", "LC", "NT", "TN", "VU", "EN", "CR"),
      ordered = T)) |>     # 674 × 5
  arrange(taxon_id, rl_fct) |> 
  group_by(taxon_id) |> 
  summarize(
    # n_rl         = n(),
    rl_max       = max(rl_fct) |> as.character(),
    # redlist_code = paste(redlist_code, collapse = ', '),
    .groups = "drop") # |>  # 614 × 2
  # arrange(desc(n_rl))  

d2 <- bind_rows(
  d_b, 
  d_w) |> 
  filter(!is.na(rl_max)) |> 
  select(taxon_id, redlist_code = rl_max)

dbExecute(con_sdm, "ALTER TABLE taxon ADD COLUMN IF NOT EXISTS redlist_code VARCHAR")

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE taxon
    SET redlist_code = d2.redlist_code
    FROM d2
    WHERE taxon.taxon_id = d2.taxon_id") # 7,083
duckdb_unregister(con_sdm, "d2")
```

```{r taxon_is_marine}
# TODO: worms_is_marine, worms_is_extinct ----

d <- tbl(con_sdm, "taxon") |> 
  mutate(
    worms_id = ifelse(taxon_authority == "worms", taxon_id, NA_integer_),
    botw_id  = ifelse(taxon_authority == "botw",  taxon_id, NA_integer_)) |> 
  select(taxon_id, taxon_authority, worms_id, botw_id) |> 
  collect() # 17,561 × 4
    
d_b <- d |> 
  filter(
    taxon_authority == "botw",
    !is.na(botw_id)) |>
  select(-worms_id) |> 
  left_join(
    tbl(con_sdm, "species") |> 
      filter(
        sp_cat == "bird",
        !is.na(worms_id)) |> 
      select(botw_id, worms_id) |> 
      collect() |> 
      group_by(botw_id) |> 
      summarize(
        worms_id = first(worms_id)),
    by = join_by(botw_id)) |> 
  filter(!is.na(worms_id))

d_b <- d_b |>
  left_join(
    tbl(con_spp, "worms") |> 
      filter(
        taxonID %in% d_b$worms_id,
        !is.na(isMarine) | !is.na(isExtinct)) |> 
      select(
        worms_id         = taxonID, 
        worms_is_marine  = isMarine,
        worms_is_extinct = isExtinct) |> 
      collect(),
    by = join_by(worms_id)) |>
  collect() # 405 × 6

d_w <- d |> 
  filter(
    taxon_authority == "worms",
    !is.na(worms_id)) |>
  select(-botw_id)

d_w <- d_w |>
  left_join(
    tbl(con_spp, "worms") |> 
      filter(
        taxonID %in% d_w$worms_id,
        !is.na(isMarine) | !is.na(isExtinct)) |> 
      select(
        worms_id         = taxonID, 
        worms_is_marine  = isMarine,
        worms_is_extinct = isExtinct) |> 
      collect(),
    by = join_by(worms_id)) |>
  collect()  # 16,947 × 5

d2 <- bind_rows(
  d_b, 
  d_w) |> 
  select(taxon_id, worms_is_marine, worms_is_extinct)

stopifnot(sum(duplicated(d2$taxon_id)) == 0)

dbExecute(con_sdm, "ALTER TABLE taxon ADD COLUMN IF NOT EXISTS worms_is_marine BOOLEAN")
dbExecute(con_sdm, "ALTER TABLE taxon ADD COLUMN IF NOT EXISTS worms_is_extinct BOOLEAN")

duckdb_register(con_sdm, "d2", d2)
dbExecute(
  con_sdm, 
    "UPDATE taxon
    SET worms_is_marine  = d2.worms_is_marine ,
        worms_is_extinct = d2.worms_is_extinct 
    FROM d2
    WHERE taxon.taxon_id = d2.taxon_id")  # 17,352
duckdb_unregister(con_sdm, "d2")
```

```{r insert_dataset_row}
ds_key <- "ms_merge"
row_dataset <- tibble(
  ds_key          = !!ds_key,
  name_short      = "Marine Sensitivity Merged Model",
  name_original   = "Marine Sensitivity merged model from multiple inputs",
  description     = "This dataset is derived from others. When a given taxon has multiple distributions, the maximum value is taken.",
  citation        = "",
  source_broad    = "BOEM",
  source_detail   = "https://marinesensitivity.org/docs",
  regions         = "USA",
  response_type   = "mixed",
  taxa_groups     = "all taxa",
  year_pub        = 2025,
  date_obs_beg    = NA,
  date_obs_end    = NA,
  date_env_beg    = NA,
  date_env_end    = NA,
  link_info       = "https://github.com/MarineSensitivity",
  link_download   = NA,
  link_metadata   = NA,
  links_other     = NA,
  spatial_res_deg = 0.05,
  temporal_res    = "static")

if (dbExistsTable(con_sdm, "dataset"))
  dbExecute(con_sdm, glue("DELETE FROM dataset WHERE ds_key = '{ds_key}'"))

dbWriteTable(con_sdm, "dataset", row_dataset, append = TRUE)
# tbl(con_sdm, "dataset")
```

```{r iterate_merge_ds_mdl}
ds_key   <- "ms_merge"

# cell_tif <- glue("{dir_data}/derived/r_bio-oracle_planarea.tif")
# r_cell <- rast(cell_tif)
# ext(r_cell) <- round(ext(r_cell), 3)

d_x <- tbl(con_sdm, "taxon") |> 
  filter(is.na(mdl_seq)) |>
  arrange(desc(n_ds), taxon_id) |> 
  collect()  # 91

# table(d_x$sp_cat, useNA = "ifany")
# bird        coral         fish invertebrate       mammal      reptile 
#   49           10           12            1           12            7 

ds_keys <- tbl(con_sdm, "dataset") |> 
  pull(ds_key) |> 
  setdiff("ms_merge")

for (i in 1:nrow(d_x)){  # i = 1
  
  d_sp <- d_x |> slice(i)
  # d_sp |> glimpse()
  # Rows: 1
  # Columns: 15
  # $ taxon_id         <dbl> 127186
  # $ taxon_authority  <chr> "worms"
  # $ n_ds             <int> 4
  # $ am_0.05          <int> 7466
  # $ ch_nmfs          <int> 18230
  # $ ch_fws           <int> 18309
  # $ rng_fws          <int> 18401
  # $ sp_cat           <chr> "fish"
  # $ bl               <int> NA
  # $ mdl_seq          <int> NA
  # $ scientific_name  <chr> "Salmo salar"
  # $ common_name      <chr> "silver salmon"
  # $ redlist_code     <chr> "EN"
  # $ worms_is_marine  <lgl> TRUE
  # $ worms_is_extinct <lgl> NA
  
  cols_l <- c("taxon_id", "taxon_authority", ds_keys)
  d_sp_l <- d_sp |> 
    select(all_of(cols_l)) |> 
    pivot_longer(
      cols      = all_of(ds_keys), 
      names_to  = "ds_key", 
      values_to = "mdl_seq") |>
    filter(!is.na(mdl_seq))
  
  d_r_ds <- tbl(con_sdm, "model_cell") |> 
    filter(
      mdl_seq %in% d_sp_l$mdl_seq) |> 
    left_join(
      tbl(con_sdm, "model") |> 
        select(mdl_seq, ds_key) |> 
        filter(mdl_seq %in% d_sp_l$mdl_seq),
      by = "mdl_seq") |> 
    group_by(ds_key) |> 
    summarize(
      n_cell = n(),
      v_min = min(value, na.rm = T),
      v_max = max(value, na.rm = T),
      .groups = "drop") |> 
    collect() |> 
    mutate(
      ds_str = glue("{ds_key} ({n_cell} cells, {v_min} - {v_max})"))
  #   ds_key  n_cell v_min v_max ds_str                        
  #   <chr>    <dbl> <int> <int> <glue>                        
  # 1 ch_nmfs      3    90    90 ch_nmfs (3 cells, 90 - 90)    
  # 2 am_0.05  11739     1   100 am_0.05 (11739 cells, 1 - 100)
  # 3 ch_fws      29    90    90 ch_fws (29 cells, 90 - 90)    
  # 4 rng_fws    264    50    90 rng_fws (264 cells, 50 - 90) 
  
  d_r_sp <- tbl(con_sdm, "model_cell") |> 
    filter(
      mdl_seq %in% d_sp_l$mdl_seq) |> 
    group_by(cell_id) |> 
    summarize(
      value = max(value, na.rm = T),
      .groups = "drop") |> 
    collect()
  # TODO: get new mdl_seq
  
  # visual check
  # r <- init(r_cell[[1]], NA)
  # r[d_r_sp$cell_id] <- d_r_sp$value
  # r_r <- rotate(r)
  # plet(r_r)
  
  sp_sci  <- d_sp$scientific_name
  sp_cmn  <- d_sp$common_name
  sp_cat  <- d_sp$sp_cat
  sp_key  <- glue("{ds_key}:{d_sp$taxon_id}")
  message(glue("Processing {i}/{nrow(d_x)} [{sp_key}] ({sp_cat}): {sp_cmn} (_{sp_sci}_)"))
  
  n_cells <- nrow(d_r_sp)
  if (n_cells == 0){
    message(glue("No cells for {sp_sci} ({i}/{nrow(d_x)})"))
    next()
  }

  # delete: existing ----
  mdl_seqs <- tbl(con_sdm, "model") |> 
    filter(ds_key == !!ds_key, taxa == !!sp_key) |> 
    pull(mdl_seq)
  if (length(mdl_seqs) > 0) {
    dbExecute(con_sdm, glue("DELETE FROM model WHERE ds_key = '{ds_key}' AND taxa = '{sp_key}'"))
    dbExecute(con_sdm, glue("DELETE FROM species WHERE ds_key = '{ds_key}' AND taxa = '{sp_key}'"))
    dbExecute(con_sdm, glue("DELETE FROM model_cell WHERE mdl_seq IN ({paste(mdl_seqs, collapse = ',')})"))
    dbExecute(con_sdm, glue("UPDATE taxon SET mdl_seq = NULL WHERE mdl_seq IN ({paste(mdl_seqs, collapse = ',')})"))
  }
  
  # append: model ----
  d_model <- tibble(
    ds_key      = ds_key,
    taxa        = sp_key,
    time_period = "2025",
    region      = "USA",
    mdl_type    = "mixed",
    description = glue(
      "Marine Sensitivity merged model from datasets: {paste(d_r_ds$ds_str, collapse = '; ')}") )
  dbWriteTable(con_sdm, "model", d_model, append = TRUE)
  # tbl(con_sdm, "model") |> collect() |> tail()
  
  # get the mdl_seq that was just created
  mdl_seq <- dbGetQuery(con_sdm, glue("
    SELECT mdl_seq FROM model 
    WHERE
      ds_key = '{ds_key}' AND 
      taxa   = '{sp_key}'
    ORDER BY mdl_seq DESC LIMIT 1 "))$mdl_seq
  
  # d_sp |> glimpse()
  # Rows: 1
  # Columns: 15
  # $ taxon_id         <dbl> 127186
  # $ taxon_authority  <chr> "worms"
  # $ n_ds             <int> 4
  # $ am_0.05          <int> 7466
  # $ ch_nmfs          <int> 18230
  # $ ch_fws           <int> 18309
  # $ rng_fws          <int> 18401
  # $ sp_cat           <chr> "fish"
  # $ bl               <int> NA
  # $ mdl_seq          <int> NA
  # $ scientific_name  <chr> "Salmo salar"
  # $ common_name      <chr> "silver salmon"
  # $ redlist_code     <chr> "EN"
  # $ worms_is_marine  <lgl> TRUE
  # $ worms_is_extinct <lgl> NA
  
  # append: species ----
  d_species <- tibble(
    ds_key                   = ds_key,
    taxa                     = sp_key,
    sp_key                   = sp_key,
    worms_id                 = ifelse(d_sp$taxon_authority == "worms", d_sp$taxon_id, NA_integer_),
    botw_id                  = ifelse(d_sp$taxon_authority == "botw",  d_sp$taxon_id, NA_integer_),
    gbif_id                  = NA_integer_,
    itis_id                  = NA_integer_,
    iucn_id                  = NA_integer_,
    scientific_name_dataset  = sp_sci,
    common_name_dataset      = sp_cmn,
    scientific_name_accepted = sp_sci,
    common_name_accepted     = sp_cmn,
    # DEBUG: taxon.rl_code cont: mdl_seq == 18422 ----
    redlist_code             = d_sp$redlist_code,
    redlist_year             = NA_integer_,
    sp_cat                   = sp_cat,
    worms_is_marine          = d_sp$worms_is_marine,
    worms_is_extinct         = d_sp$worms_is_extinct)
  # d_species |> glimpse()
  
  stopifnot(length(setdiff(names(d_species), dbListFields(con_sdm, "species"))) == 0)
  stopifnot(setdiff(dbListFields(con_sdm, "species"), names(d_species)) == "sp_seq")
  dbWriteTable(con_sdm, "species", d_species, append = T)
  # tbl(con_sdm, "species") |> collect() |> tail()
  # tbl(con_sdm, "model")   |> collect() |> tail()
  stopifnot(tbl(con_sdm, "species") |> filter(is.na(sp_seq)) |> collect() |> nrow() == 0)

  # append: model_cell ----
  d_mdl_cell <- d_r_sp |> 
    mutate(
      mdl_seq = mdl_seq) |> 
    arrange(cell_id)
  dbWriteTable(con_sdm, "model_cell", d_mdl_cell, append = T)
  
  # TODO: update taxon with mdl_seq
  dbExecute(con_sdm, glue("
    UPDATE taxon 
    SET   mdl_seq  = {mdl_seq} 
    WHERE taxon_id = {d_sp$taxon_id}"))
}
```

```{r taxon_summary}
taxon_csv <- here("data/taxon.csv")

# dbListFields(con_sdm, "taxon") |> paste(collapse = ", ") |> cat()
d_taxon <- tbl(con_sdm, "taxon") |> 
  select(
    component = sp_cat, 
    common_name, scientific_name,
    redlist_code_max = redlist_code, 
    worms_is_marine, worms_is_extinct,
    n_datasets = n_ds, 
    ds_aquamaps_mdl_id = am_0.05, ds_birdlife_mdl_id = bl, 
    ds_nmfs_crithab_mdl_id = ch_nmfs, 
    ds_fws_crithab_mdl_id  = ch_fws, ds_fws_range_mdl_id = rng_fws, 
    taxon_authority, 
    taxon_id, 
    model_id = mdl_seq) |> 
  arrange(component, common_name) |> 
  collect()

write_csv(d_taxon, taxon_csv)

# d_taxon |>
#   select(component, redlist_code_max) |>
#   table(useNA = "ifany")
#               redlist_code_max
# component        CR   DD   EN   EX   LC   NT   TN   VU <NA>
#   bird            3    1   58    0  452   45   14   41    0
#   coral          16   10  143    0  201   17    4   20  364
#   fish           20  242   61    0 4920   69    2  112 1253
#   invertebrate    7   84   18    0  381   16    0   13 7724
#   mammal          2    4   11    1   54    5    5    6    1
#   other           0    0    0    0    2    0    0    0 1127
#   reptile         2    0    2    0   16    0    0    3    9

d_taxon_p <- d_taxon |>
  select(
    component, 
    taxon_id, 
    ds_aquamaps_mdl_id, ds_birdlife_mdl_id, 
    ds_nmfs_crithab_mdl_id, 
    ds_fws_crithab_mdl_id, ds_fws_range_mdl_id) |>
  pivot_longer(
    cols      = starts_with("ds_"), 
    names_to  = "dataset", 
    values_to = "mdl_seq") |>
  mutate(
    dataset = str_remove(dataset, "^ds_") |> 
      str_replace_all("_mdl_id", "")) |> 
  filter(
    !is.na(taxon_id),
    !is.na(mdl_seq)) |> 
  arrange(component, taxon_id)

# d_taxon_p |>
#   group_by(component) |>
#   summarize(
#     n_species = n_distinct(taxon_id),
#     n_models  = n_distinct(mdl_seq),
#     .groups = "drop")
#   component    n_species n_models
# 1 bird               614      666
# 2 coral              775      785
# 3 fish              6679     6694
# 4 invertebrate      8243     8244
# 5 mammal              89      102
# 6 other             1129     1129
# 7 reptile             32       48

# d_taxon_p |>
#   group_by(component, dataset) |>
#   summarize(
#     n_models  = length(unique(mdl_seq)),
#     .groups = "drop") |> 
#   print(n = Inf)
#    component    dataset      n_models
#    <chr>        <chr>           <int>
#  1 bird         aquamaps            1
#  2 bird         birdlife          571
#  3 bird         fws_crithab        17
#  4 bird         fws_range          77
#  5 coral        aquamaps          774
#  6 coral        nmfs_crithab       11
#  7 fish         aquamaps         6676
#  8 fish         fws_crithab         3
#  9 fish         fws_range           9
# 10 fish         nmfs_crithab        6
# 11 invertebrate aquamaps         8239
# 12 invertebrate fws_range           4
# 13 invertebrate nmfs_crithab        1
# 14 mammal       aquamaps           84
# 15 mammal       fws_crithab         3
# 16 mammal       fws_range           4
# 17 mammal       nmfs_crithab       11
# 18 other        aquamaps         1129
# 19 reptile      aquamaps           32
# 20 reptile      fws_crithab         5
# 21 reptile      fws_range           7
# 22 reptile      nmfs_crithab        4
```



